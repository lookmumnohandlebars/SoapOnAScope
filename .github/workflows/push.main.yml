name: ðŸš€ Release
on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up dependencies
        uses: ./.github/actions/setup

      - name: Build
        run: task src:build

      - name: Test
        run: task src:test

      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v4

      - name: Create package
        if: ${{ steps.release.outputs.release_created }}
        run: |
          task src:build-release
          task src:pack

      - name: Push packages to GPR
        if: ${{ steps.release.outputs.release_created }}
        run: task src:publish

  publish-docs:
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Dotnet Setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x

      - run: dotnet tool update -g docfx
      - run: docfx <docfx-project-path>/docfx.json

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "<docfx-project-path>/_site"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
